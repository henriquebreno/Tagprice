<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mvvm="clr-namespace:SampleApp.XF.Mvvm"
             xmlns:gv="clr-namespace:BarcodeScanner.Mobile;assembly=BarcodeScanner.Mobile.XamarinForms"
             x:Class="SampleApp.XF.Mvvm.MvvmDemo">
    <ContentPage.BindingContext>
        <mvvm:MvvmDemoViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Content>

        <Grid HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <StackLayout Orientation="Vertical" HorizontalOptions="FillAndExpand" Grid.Row="0" Grid.ColumnSpan="3">
                <Button x:Name="CancelButton" Text="Cancel" BackgroundColor="#FF0000" TextColor="White" Clicked="CancelButton_Clicked" HorizontalOptions="FillAndExpand"
                        CornerRadius="0"/>
                <Button x:Name="FlashlightButton" BackgroundColor="#0075FF" TextColor="White" HorizontalOptions="FillAndExpand"
                        CornerRadius="0" Command="{Binding HandleFlashlightCommand}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding TorchOn}" Value="True">
                            <Setter Property="Text" Value="Set Torch Off"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding TorchOn}" Value="False">
                            <Setter Property="Text" Value="Set Torch On"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button x:Name="VibrationButton" BackgroundColor="#93FF" TextColor="White" HorizontalOptions="FillAndExpand"
                       CornerRadius="0" Command="{Binding HandleVirbationCommand}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding VibrationOnDetected}" Value="True">
                            <Setter Property="Text" Value="Set Vibration Off"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding VibrationOnDetected}" Value="False">
                            <Setter Property="Text" Value="Set Vibration On"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button x:Name="IsScanningButton" BackgroundColor="#000000" TextColor="White" HorizontalOptions="FillAndExpand"
                       CornerRadius="0" Command="{Binding HandleIsScanningCommand}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsScanning}" Value="True">
                            <Setter Property="Text" Value="Stop Scanning"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsScanning}" Value="False">
                            <Setter Property="Text" Value="Start Scanning"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Label Text="Scan Interval (ms)"/>
                <Entry Keyboard="Numeric" Placeholder="Scan interval (ms)" Text="{Binding ScanInterval}"/>
            </StackLayout>
            <!--Fill the screen with CameraView-->
            <gv:CameraView Grid.Row="1" Grid.Column="1"
                           OnDetectedCommand="{Binding OnDetectCommand}" 
                           IsScanning="{Binding IsScanning}" 
                           TorchOn="{Binding TorchOn}" VibrationOnDetected="{Binding VibrationOnDetected}" ScanInterval="{Binding ScanInterval}"
                           x:Name="Camera" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Zoom="{Binding Zoom}"/>
            <!--Customized Size-->
            <!--<gv:CameraView HorizontalOptions="Center" WidthRequest="200" HeightRequest="200" OnDetected="CameraView_OnDetected" Grid.Row="1"/>-->
            <StackLayout Grid.Row="2" HeightRequest="120" Grid.ColumnSpan="3">
                <Label Text="Result" TextColor="Red"></Label>
                <Label Text="{Binding Result}" TextColor="Black"></Label>
            </StackLayout>

            <StackLayout Grid.Row="3" Grid.ColumnSpan="3">
                <Label Text="Zoom" TextColor="White" />
                <Slider
                    x:Name="ZoomSlider"
                    HeightRequest="50"
                    Value="{Binding Zoom}"
                    Maximum="1"
                    Minimum="0" />
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>


